setwd("~/GitHub/MinimalCell")
require("png")
require("dplyr")
require("grid")
require("knitr")
sem <- function(x) sqrt(var(x)/length(x))
# Load data
size.raw <-read.csv("~/GitHub/MinimalCell/data2/cases_microbeJ.csv")
size.raw <- as_tibble(size.raw)
colnames(size.raw) <- c("strain", "timepoint", "sub.strain", "diameter", "area",
"volume", "pixels", "mean", "min", "max")
size <- size.raw %>% group_by(strain, timepoint) %>%
summarise(mean = mean(diameter), sem = sem(diameter),
mean.v=mean(volume),sem.v=sem(volume))
size$strain <- as.factor(size$strain)
size$timepoint <- as.factor(size$timepoint)
# Add x-values for plotting
time.x <- c(1, 3, 1, 3)
size <- data.frame(size, time.x)
size.raw
size.reps <- size.raw %>%
dplyr::select(strain, timepoint, sub.strain, diameter,volume) %>%
group_by(timepoint, strain, sub.strain) %>%
summarize(mean.diam = mean(diameter),mean.vol=mean(volume))
s1_anc.reps <- filter(size.raw, sub.strain == "s1_anc")
B_anc.reps <- filter(size.raw, sub.strain == "B_anc")
## Analysis of diameter measurements
equal.var.anc <- var.test(s1_anc.reps$diameter, B_anc.reps$diameter)
anc.t.test <- t.test(x = s1_anc.reps$diameter, B_anc.reps$diameter,
alternative = "two.sided", var.equal = T, mu = 0)
# Difference in cell size between wt and minimal at ancestor timepoint?
# Test for equal variance: P = p-value = 0.8492 --> homogeneous variance
# Results: t = 4.1628, df = 77, p-value = 8.119EE-05
evo.reps <- filter(size.reps, timepoint == "Evolved") %>%
group_by(strain, sub.strain)
equal.var.evo <- var.test(evo.reps$mean.diam[1:4], evo.reps$mean.diam[5:8])
evo.t.test <- t.test(evo.reps$mean.diam ~ evo.reps$strain, var.equal = T)
# Difference in cell size between wt and minimal at evolved timepoint?
# Test for equal variance: p-value = 0.8685 --> homogeneous variance
# Results: t = -7.3870, df = 6, p-value = 0.0003158
# Difference in size between Non-minimal ancestor and Non-minimal evolved?
s1_delta.t.test <- t.test(x = evo.reps$mean.diam[5:8],
mu = size.reps$mean.diam[2], alternative = 't')
# Answer = Yes: t = 7.8404, df = 3, p-value = 0.004321
# Difference in cell size between minimal ancestor and minimal evolved?
B_delta.t.test <- t.test(x = evo.reps$mean.diam[1:4],
mu = size.reps$mean.diam[1], alternative = 't')
## Analysis of volume measurements
equal.var.anc.v <- var.test(s1_anc.reps$volume, B_anc.reps$volume)
equal.var.anc.v
anc.t.test.v <- t.test(x = s1_anc.reps$volume, B_anc.reps$volume,
alternative = "two.sided", var.equal = F, mu = 0)
anc.t.test.v
evo.reps
equal.var.evo.v <- var.test(evo.reps$mean.vol[1:4], evo.reps$mean.vol[5:8])
equal.var.evo.v
evo.t.test.v <- t.test(evo.reps$mean.vol ~ evo.reps$strain, var.equal = F)
evo.t.test.v
# Difference in volume between Non-minimal ancestor and Non-minimal evolved?
s1_delta.t.test.v <- t.test(x = evo.reps$mean.vol[5:8],
mu = size.reps$mean.vol[2], alternative = 't')
s1_delta.t.test.v
# Difference in cell volume between minimal ancestor and minimal evolved?
B_delta.t.test.v <- t.test(x = evo.reps$mean.vol[1:4],
mu = size.reps$mean.vol[1], alternative = 't')
B_delta.t.test.v
rm(list=ls())
require("knitr")
getwd()
setwd("~/GitHub/MinimalCell")
#opts_knit$set(root.dir = "~\\..\\GitHub\\MinimalCell")
#knitr::opts_chunk$set(root.dir = "~\\..\\GitHub\\MinimalCell")
getwd()
require("png")
require("dplyr")
require("grid")
sem <- function(x) sqrt(var(x)/length(x))
# Load data
size.raw <-read.csv("~/GitHub/MinimalCell/data/SEM_Stein_data/SEM_Stein_cases.csv")
size.raw <- as_tibble(size.raw)
colnames(size.raw) <- c("strain", "timepoint", "sub.strain", "diameter")
#colnames(size.raw_no.mutant) <- c("strain", "timepoint", "sub.strain", "diameter")
size.raw<-mutate(size.raw, volume = 4/3*pi*(diameter/2)^3)
size <- size.raw %>% group_by(strain, timepoint) %>% summarise(mean = mean(diameter), sem = sem(diameter), mean.v=mean(volume),sem.v=sem(volume))
size$strain <- as.factor(size$strain)
size$timepoint <- as.factor(size$timepoint)
fsize<-size %>% filter(timepoint!="Evolved")
esize<-size %>% filter(timepoint!="Mutant")
# Add x-values for plotting
time.x <- c(1,3,1,3)
fsize <- data.frame(fsize, time.x)
esize <- data.frame(esize, time.x)
# Subset data
size.reps <- size.raw %>%
dplyr::select(strain, timepoint, sub.strain, diameter, volume) %>%
group_by(timepoint, strain, sub.strain) %>%
summarize(mean.diam = mean(diameter),mean.vol=mean(volume))
s1_anc.reps <- filter(size.raw, sub.strain == "s1_anc")
B_anc.reps <- filter(size.raw, sub.strain == "B_anc")
equal.var.anc <- var.test(s1_anc.reps$diameter, B_anc.reps$diameter)
anc.t.test <- t.test(x = s1_anc.reps$diameter, B_anc.reps$diameter, alternative = "two.sided", var.equal = TRUE, mu = 0)
s1_ftsZ.reps <- filter(size.raw, sub.strain == "s1_ftsZ")
B_ftsZ.reps <- filter(size.raw, sub.strain == "B_ftsZ")
equal.var.s1.ftsZ <- var.test(s1_anc.reps$diameter, s1_ftsZ.reps$diameter)
s1.ftsZ.t.test <- t.test(x = s1_anc.reps$diameter, s1_ftsZ.reps$diameter, alternative = "two.sided", var.equal = TRUE, mu = 0)
equal.var.B.ftsZ <- var.test(B_anc.reps$diameter, B_ftsZ.reps$diameter)
B.ftsZ.t.test <- t.test(x = B_anc.reps$diameter, B_ftsZ.reps$diameter, alternative = "two.sided", var.equal = FALSE, mu = 0)
evo.reps <- filter(size.reps, timepoint == "Evolved") %>%
group_by(strain, sub.strain)
equal.var.evo <- var.test(evo.reps$mean.diam[1:4], evo.reps$mean.diam[5:8])
evo.t.test <- t.test(evo.reps$mean.diam ~ evo.reps$strain, var.equal = T)
# Difference in cell size between Non-minimal ancestor and Non-minimal evolved lines?
s1_delta.t.test <- t.test(x = evo.reps$mean.diam[5:8], mu = size.reps$mean.diam[2], alternative = 'two.sided')
# Difference in cell size between minimal ancestor and minimal evolved lines?
B_delta.t.test <- t.test(x = evo.reps$mean.diam[1:4], mu = size.reps$mean.diam[1], alternative = 't')
#Generate matrices with rows/cols for ancestor and evolved
esize.wt  <- filter(esize, strain == "Non-minimal") %>%
dplyr::select(timepoint, mean, sem, mean.v,sem.v, time.x)
fsize.wt  <- filter(esize, strain == "Non-minimal") %>%
dplyr::select(timepoint, mean, sem, mean.v,sem.v,time.x)
esize.min  <- filter(esize, strain== "Minimal") %>%
dplyr::select(timepoint, mean, sem, mean.v,sem.v,time.x)
fsize.min  <- filter(fsize, strain== "Minimal") %>%
dplyr::select(timepoint, mean, sem, mean.v,sem.v,time.x)
#Supply correct values to matrices for ancestor and evolved
esize.wt$mean[2] <- mean(evo.reps$mean.diam[5:8])
esize.wt$sem[2] <- sem(evo.reps$mean.diam[5:8])
esize.wt$mean.v[2]<-mean(evo.reps$mean.vol[5:8])
esize.wt$sem.v[2]<-sem(evo.reps$mean.vol[5:8])
esize.min$mean[2] <- mean(evo.reps$mean.diam[1:4])
esize.min$sem[2] <- sem(evo.reps$mean.diam[1:4])
esize.min$mean.v[2]<-mean(evo.reps$mean.vol[1:4])
esize.min$sem.v[2]<-sem(evo.reps$mean.vol[1:4])
#Generate matrices with rows/cols for ancestor and ftsZ mutant
size.wt.ftsZ <- esize.wt
size.wt.ftsZ$timepoint <- as.character(size.wt.ftsZ$timepoint)
size.wt.ftsZ$timepoint[2] <- "ftsZ E315*"
size.wt.ftsZ$timepoint <- factor(size.wt.ftsZ$timepoint)
size.min.ftsZ <- esize.min
size.min.ftsZ$timepoint <- as.character(size.min.ftsZ$timepoint)
size.min.ftsZ$timepoint[2] <- "ftsZ E315*"
size.min.ftsZ$timepoint <- factor(size.min.ftsZ$timepoint)
#Supply correct values to matrices for ancestor and ftsZ mutant
size.wt.ftsZ$mean[2] <- mean(s1_ftsZ.reps$diameter)
size.wt.ftsZ$sem[2] <- sem(s1_ftsZ.reps$diameter)
size.wt.ftsZ$mean.v[2] <- mean(s1_ftsZ.reps$volume)
size.wt.ftsZ$sem.v[2] <- sem(s1_ftsZ.reps$volume)
size.min.ftsZ$mean[2] <- mean(B_ftsZ.reps$diameter)
size.min.ftsZ$sem[2] <- sem(B_ftsZ.reps$diameter)
size.min.ftsZ$mean.v[2] <- mean(B_ftsZ.reps$volume)
size.min.ftsZ$sem.v[2] <- sem(B_ftsZ.reps$volume)
# Make figure for ancestor and evolved
png(filename="~/GitHub/MinimalCell/figures/FigS3.png",
width = 1200, height = 1200, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
# Add Non-minimal points
plot(esize.wt$time.x, esize.wt$mean, xlim = c(0, 4.55),
ylim = c(0.0, 1.1), type = "p", pch = 21, bg = "blue",
col = "blue", cex = 2, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd=2)
# Add minimal points
points(esize.min$time.x, esize.min$mean, pch = 21,
bg = "red", col = "red", lwd = 2, cex = 2)
# Add error bars
arrows(x0 = esize.wt$time.x, y0 = esize.wt$mean,
y1 = esize.wt$mean + esize.wt$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = esize.wt$time.x, y0 = esize.wt$mean,
y1 = esize.wt$mean - esize.wt$sem,
angle = 90, length=0.1, lwd = 2, col = "blue")
arrows(x0 = esize.min$time.x, y0 = esize.min$mean,
y1 = esize.min$mean + esize.min$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = esize.min$time.x, y0 = esize.min$mean,
y1 = esize.min$mean - esize.min$sem,
angle = 90, length=0.1, lwd = 2, col = "red")
# Add axes and labels
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.00", "0.25", "0.50", "0.75", "1.00"), at = c(0, 0.25, 0.5, 0.75, 1.00))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0, 0.25, 0.5, 0.75, 1.00), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("Ancestor", "Evolved"),
col.axis = "darkgray", at = c(1, 3))
mtext(expression('Timepoint'), side = 1,
outer = TRUE, cex = 1.5, line = -3.5, adj = 0.45)
mtext(expression(paste("Cell diameter (",mu, "m)")), side = 2,
outer = TRUE, cex = 1.5, line = -3, adj = 0.55)
# Add line segments
segments(esize.wt$time.x[1], esize.wt$mean[1], esize.wt$time.x[2],
esize.wt$mean[2], col = "blue", lwd = 2)
segments(esize.min$time.x[1], esize.min$mean[1], esize.min$time.x[2],
esize.min$mean[2], col = "red", lwd = 2)
# Add P-values
#mtext(expression("Timepoint x Strain:"), line = -2.5, cex = 0.8, at = 0.9)
#mtext(expression(~italic("P")~"< 0.0001"), line = -3.5, cex = 0.8, at = 0.9)
# Add strain identifier
text(3.9, esize.wt$mean[2], labels = "Non-minimal", cex = 1.0)
text(3.8, esize.min$mean[2], labels = "Minimal", cex = 1.0)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/MinimalCell/figures/FigS3.png")
grid.raster(img)
png(filename="~/GitHub/MinimalCell/figures/FigS4.png",
width = 1200, height = 1200, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
# Add Non-minimal points
plot(size.wt.ftsZ$time.x, size.wt.ftsZ$mean, xlim = c(0, 4.55),
ylim = c(0.0, .7), type = "p", pch = 21, bg = "blue",
col = "blue", cex = 2, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd=2)
# Add minimal points
points(size.min.ftsZ$time.x, size.min.ftsZ$mean, pch = 21,
bg = "red", col = "red", lwd = 2, cex = 2)
# Add error bars
arrows(x0 = size.wt.ftsZ$time.x, y0 = size.wt.ftsZ$mean,
y1 = size.wt.ftsZ$mean + size.wt.ftsZ$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = size.wt.ftsZ$time.x, y0 = size.wt.ftsZ$mean,
y1 = size.wt.ftsZ$mean - size.wt.ftsZ$sem,
angle = 90, length=0.1, lwd = 2, col = "blue")
arrows(x0 = size.min.ftsZ$time.x, y0 = size.min.ftsZ$mean,
y1 = size.min.ftsZ$mean + size.min.ftsZ$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = size.min.ftsZ$time.x, y0 = size.min.ftsZ$mean,
y1 = size.min.ftsZ$mean - size.min.ftsZ$sem,
angle = 90, length=0.1, lwd = 2, col = "red")
# Add axes and labels
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.00", "0.20", "0.40", "0.60"), at = c(0, 0.2, 0.4, 0.6))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0, 0.2, 0.4, 0.6), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("Ancestor", "ftsZ E315*"),
col.axis = "darkgray", at = c(1, 3))
mtext(expression('Timepoint'), side = 1,
outer = TRUE, cex = 1.5, line = -3.5, adj = 0.45)
mtext(expression(paste("Cell diameter (",mu, "m)")), side = 2,
outer = TRUE, cex = 1.5, line = -3, adj = 0.55)
# Add line segments
segments(size.wt.ftsZ$time.x[1], size.wt.ftsZ$mean[1], size.wt.ftsZ$time.x[2],
size.wt.ftsZ$mean[2], col = "blue", lwd = 2)
segments(size.min.ftsZ$time.x[1], size.min.ftsZ$mean[1], size.min.ftsZ$time.x[2],
size.min.ftsZ$mean[2], col = "red", lwd = 2)
# Add P-values
#mtext(expression("Timepoint x Strain:"), line = -2.5, cex = 0.8, at = 0.9)
#mtext(expression(~italic("P")~"< 0.0001"), line = -3.5, cex = 0.8, at = 0.9)
# Add strain identifier
text(3.9, size.wt.ftsZ$mean[2], labels = "Non-minimal", cex = 1.0)
text(3.8, size.min.ftsZ$mean[2], labels = "Minimal", cex = 1.0)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/../GitHub/MinimalCell/figures/FigS4.png")
png(filename="~/GitHub/MinimalCell/figures/FigS4.png",
width = 1200, height = 1200, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
# Add Non-minimal points
plot(size.wt.ftsZ$time.x, size.wt.ftsZ$mean, xlim = c(0, 4.55),
ylim = c(0.0, .7), type = "p", pch = 21, bg = "blue",
col = "blue", cex = 2, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd=2)
# Add minimal points
points(size.min.ftsZ$time.x, size.min.ftsZ$mean, pch = 21,
bg = "red", col = "red", lwd = 2, cex = 2)
# Add error bars
arrows(x0 = size.wt.ftsZ$time.x, y0 = size.wt.ftsZ$mean,
y1 = size.wt.ftsZ$mean + size.wt.ftsZ$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = size.wt.ftsZ$time.x, y0 = size.wt.ftsZ$mean,
y1 = size.wt.ftsZ$mean - size.wt.ftsZ$sem,
angle = 90, length=0.1, lwd = 2, col = "blue")
arrows(x0 = size.min.ftsZ$time.x, y0 = size.min.ftsZ$mean,
y1 = size.min.ftsZ$mean + size.min.ftsZ$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = size.min.ftsZ$time.x, y0 = size.min.ftsZ$mean,
y1 = size.min.ftsZ$mean - size.min.ftsZ$sem,
angle = 90, length=0.1, lwd = 2, col = "red")
# Add axes and labels
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.00", "0.20", "0.40", "0.60"), at = c(0, 0.2, 0.4, 0.6))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0, 0.2, 0.4, 0.6), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("Ancestor", "ftsZ E315*"),
col.axis = "darkgray", at = c(1, 3))
mtext(expression('Timepoint'), side = 1,
outer = TRUE, cex = 1.5, line = -3.5, adj = 0.45)
mtext(expression(paste("Cell diameter (",mu, "m)")), side = 2,
outer = TRUE, cex = 1.5, line = -3, adj = 0.55)
# Add line segments
segments(size.wt.ftsZ$time.x[1], size.wt.ftsZ$mean[1], size.wt.ftsZ$time.x[2],
size.wt.ftsZ$mean[2], col = "blue", lwd = 2)
segments(size.min.ftsZ$time.x[1], size.min.ftsZ$mean[1], size.min.ftsZ$time.x[2],
size.min.ftsZ$mean[2], col = "red", lwd = 2)
# Add P-values
#mtext(expression("Timepoint x Strain:"), line = -2.5, cex = 0.8, at = 0.9)
#mtext(expression(~italic("P")~"< 0.0001"), line = -3.5, cex = 0.8, at = 0.9)
# Add strain identifier
text(3.9, size.wt.ftsZ$mean[2], labels = "Non-minimal", cex = 1.0)
text(3.8, size.min.ftsZ$mean[2], labels = "Minimal", cex = 1.0)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/MinimalCell/figures/FigS4.png")
grid.raster(img)
size.reps
equal.var.anc.v <- var.test(s1_anc.reps$volume, B_anc.reps$volume)
rm(list=ls())
require("png")
require("dplyr")
require("grid")
sem <- function(x) sqrt(var(x)/length(x))
# Load data
size.raw <-read.csv("~/GitHub/MinimalCell/data/SEM_Stein_data/SEM_Stein_cases.csv")
size.raw <- as_tibble(size.raw)
colnames(size.raw) <- c("strain", "timepoint", "sub.strain", "diameter")
#colnames(size.raw_no.mutant) <- c("strain", "timepoint", "sub.strain", "diameter")
size.raw<-mutate(size.raw, volume = 4/3*pi*(diameter/2)^3)
size <- size.raw %>% group_by(strain, timepoint) %>% summarise(mean = mean(diameter), sem = sem(diameter), mean.v=mean(volume),sem.v=sem(volume))
size$strain <- as.factor(size$strain)
size$timepoint <- as.factor(size$timepoint)
fsize<-size %>% filter(timepoint!="Evolved")
esize<-size %>% filter(timepoint!="Mutant")
# Add x-values for plotting
time.x <- c(1,3,1,3)
fsize <- data.frame(fsize, time.x)
esize <- data.frame(esize, time.x)
# Add x-values for plotting
time.x <- c(1,3,1,3)
fsize <- data.frame(fsize, time.x)
esize <- data.frame(esize, time.x)
## Tests significance
```{r}
# Subset data
size.reps <- size.raw %>%
dplyr::select(strain, timepoint, sub.strain, diameter, volume) %>%
group_by(timepoint, strain, sub.strain) %>%
summarize(mean.diam = mean(diameter),mean.vol=mean(volume))
s1_anc.reps <- filter(size.raw, sub.strain == "s1_anc")
B_anc.reps <- filter(size.raw, sub.strain == "B_anc")
equal.var.anc <- var.test(s1_anc.reps$diameter, B_anc.reps$diameter)
anc.t.test <- t.test(x = s1_anc.reps$diameter, B_anc.reps$diameter, alternative = "two.sided", var.equal = TRUE, mu = 0)
s1_ftsZ.reps <- filter(size.raw, sub.strain == "s1_ftsZ")
B_ftsZ.reps <- filter(size.raw, sub.strain == "B_ftsZ")
equal.var.s1.ftsZ <- var.test(s1_anc.reps$diameter, s1_ftsZ.reps$diameter)
s1.ftsZ.t.test <- t.test(x = s1_anc.reps$diameter, s1_ftsZ.reps$diameter, alternative = "two.sided", var.equal = TRUE, mu = 0)
equal.var.B.ftsZ <- var.test(B_anc.reps$diameter, B_ftsZ.reps$diameter)
B.ftsZ.t.test <- t.test(x = B_anc.reps$diameter, B_ftsZ.reps$diameter, alternative = "two.sided", var.equal = FALSE, mu = 0)
evo.reps <- filter(size.reps, timepoint == "Evolved") %>%
group_by(strain, sub.strain)
equal.var.evo <- var.test(evo.reps$mean.diam[1:4], evo.reps$mean.diam[5:8])
evo.t.test <- t.test(evo.reps$mean.diam ~ evo.reps$strain, var.equal = T)
# Difference in cell size between Non-minimal ancestor and Non-minimal evolved lines?
s1_delta.t.test <- t.test(x = evo.reps$mean.diam[5:8], mu = size.reps$mean.diam[2], alternative = 'two.sided')
# Difference in cell size between minimal ancestor and minimal evolved lines?
B_delta.t.test <- t.test(x = evo.reps$mean.diam[1:4], mu = size.reps$mean.diam[1], alternative = 't')
equal.var.anc.v <- var.test(s1_anc.reps$volume, B_anc.reps$volume)
anc.t.test <- t.test(x = s1_anc.reps$diameter, B_anc.reps$diameter, alternative = "two.sided", var.equal = TRUE, mu = 0)
equal.var.anc.v
anc.t.test.v <- t.test(x = s1_anc.reps$volume, B_anc.reps$volume, alternative = "two.sided", var.equal = F, mu = 0)
anc.t.test.v
s1_ftsZ.reps
equal.var.s1.ftsZ.v <- var.test(s1_anc.reps$volume, s1_ftsZ.reps$volume)
equal.var.s1.ftsZ.v
s1.ftsZ.t.test.v <- t.test(x = s1_anc.reps$volume, s1_ftsZ.reps$volume, alternative = "two.sided", var.equal = F, mu = 0)
s1.ftsZ.t.test.v
equal.var.B.ftsZ.v <- var.test(B_anc.reps$volume, B_ftsZ.reps$volume)
equal.var.B.ftsZ.v
B.ftsZ.t.test.v <- t.test(x = B_anc.reps$volume, B_ftsZ.reps$volume, alternative = "two.sided", var.equal = FALSE, mu = 0)
B.ftsZ.t.test.v
evo.reps
equal.var.evo.v <- var.test(evo.reps$mean.vol[1:4], evo.reps$mean.vol[5:8])
equal.var.evo.v
evo.t.test.v <- t.test(evo.reps$mean.vol ~ evo.reps$strain, var.equal = F)
evo.t.test.v
# Difference in cell vol between Non-minimal ancestor and Non-minimal evolved lines?
s1_delta.t.test.v <- t.test(x = evo.reps$mean.vol[5:8], mu = size.reps$mean.vol[2], alternative = 'two.sided')
s1_delta.t.test.v
# Difference in cell size between minimal ancestor and minimal evolved lines?
B_delta.t.test.v <- t.test(x = evo.reps$mean.vol[1:4], mu = size.reps$mean.vol[1], alternative = 't')
B_delta.t.test.v
---
title: "Evolution of the minimal cell"
author: "Roy Moger-Reischer and Jay T. Lennon"
date: "`r format(Sys.time(), '%d %B, %Y')`"
header-includes:
- \usepackage{array}
output: pdf_document
geometry: margin=2.54cm
---
## Making Figure S1: ratio of nonsynoymous to synonmyous mutations (dN/dS)
## Clear workspace and set directory
```{r setup}
rm(list=ls())
getwd()
setwd("~/GitHub/MinimalCell")
```
## Load packages and functions
```{r}
require("png")
require("dplyr")
require("grid")
LL.95 <- function(x) t.test(x)$conf.int[1]
UL.95 <- function(x) t.test(x)$conf.int[2]
sem <- function(x) sqrt(var(x)/length(x))
```
# Load and process data
```{r}
# Load data
dnds <- read.csv("~/GitHub/MinimalCell/datafiles/cases_Mm.300.csv")
colnames(dnds)[12] <- "dnds"
colnames(dnds)[2] <- "strain"
# Convert strain to factor
dnds$strain <- as.factor(dnds$strain)
# Add x-values for plotting
x <- c(1,1,1,1,3,3,3,3)
dnds <- data.frame(dnds, x)
# Subset dN/dS by strain and summary statistics
dnds.wt  <- filter(dnds, strain == "Non-minimal") %>%
dplyr::select(strain, dnds, x)
dnds.min  <- filter(dnds, strain == "Minimal") %>%
dplyr::select(strain, dnds, x)
median.dnds.wt <-median(dnds.wt$dnds)
LL.95.dnds.wt <- LL.95(dnds.wt$dnds)
UL.95.dnds.wt <- UL.95(dnds.wt$dnds)
mean.dnds.wt<-mean(dnds.wt$dnds)
sem.dnds.wt<-sem(dnds.wt$dnds)
median.dnds.min <-median(dnds.min$dnds)
LL.95.dnds.min <- LL.95(dnds.min$dnds)
UL.95.dnds.min <- UL.95(dnds.min$dnds)
mean.dnds.min<-mean(dnds.min$dnds)
sem.dnds.min<-sem(dnds.min$dnds)
```
## t-test
```{r}
# Test for equal variance: P = 0.283 --> homogeneous variance
equal.var <- var.test(dnds.wt$dnds, dnds.min$dnds)
# Test for differences between strains: P = 0.282 --> no difference
dnds.ttest <- t.test(dnds.wt$dnds, dnds.min$dnds, var.equal = TRUE, alternative = 'two.sided')
```
# Initiate figure
```{r}
# Make figure
png(filename="~/GitHub/MinimalCell/figures/FigS1.png",
width = 1200, height = 1200, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
# Add Non-minimal points
plot(jitter(rep(1, length(dnds.wt$dnds)), amount = 0.2), dnds.wt$dnds,
xlim = c(0, 4), ylim = c(0.0, 3.5), type = "p", pch = 21, bg = "blue",
col = "blue", cex = 1.0, ylab = "", xlab = "",
cex.lab = 2.0, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd=2)
# Add horizontal line
abline(h = 1, col="darkgray", lty = 2, lwd = 2)
# Add minimal points
points(jitter(rep(3, length(dnds.min$dnds)), amount = 0.2), dnds.min$dnds,
pch = 21, bg = "red", col = "red", lwd = 2, cex = 1.0)
# Add confidence intervals
arrows(x0 = c(1), y0 = mean.dnds.wt, y1 = mean.dnds.wt + sem.dnds.wt, angle = 90,
length = 0.1, lwd = 2, col = "blue")
arrows(x0 = c(1), y0 = mean.dnds.wt, y1 = mean.dnds.wt - sem.dnds.wt, angle = 90,
length=0.1, lwd = 2, col = "blue")
arrows(x0 = c(3), y0 = mean.dnds.min, y1 = mean.dnds.min + sem.dnds.min, angle = 90,
length = 0.1, lwd = 2, col = "red")
arrows(x0 = c(3), y0 = mean.dnds.min, y1 = mean.dnds.min - sem.dnds.min, angle = 90,
length=0.1, lwd = 2, col = "red")
# Add means
points(1, mean.dnds.wt, pch = 22, col = "blue",
bg = "white", lwd = 2, cex = 2.75)
points(3, mean.dnds.min, pch = 22, col = "red",
bg = "white", lwd = 2, cex = 2.75)
# Add axes and labels
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.0", "1.0", "2.0", "3.0"), at = c(0,1, 2, 3))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0, 1, 2, 3), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("Non-minimal", "Minimal"),
col.axis = "darkgray", at = c(1, 3))
mtext(expression('Strain'), side = 1,
outer = TRUE, cex = 1.5, line = -3.5, adj = 0.5)
mtext(expression(italic("dN/dS")), side = 2,
outer = TRUE, cex = 1.5, line = -3.0)
# Add P-values
mtext(expression(~italic("P")~"= 0.282"), line = -2.0, cex = 1.0, at = 0.5)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/MinimalCell/figures/FigS1.png")
grid.raster(img)
```
