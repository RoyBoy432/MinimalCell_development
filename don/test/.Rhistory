samples <- colnames(data.in[2:dim(data.in)[2]])
}else{
data.in <- input
samples <- colnames(data.in[2:dim(data.in)[2]])
}
}}
# Check for Temp Issues
if (temp == T){
temp.test <- lm(round(Temp, 2) ~ Time, data = data.in)
p <- round(anova(temp.test)$'Pr(>F)'[1], 3)
temp.min <- min(data.in$Temp)
temp.max <- max(data.in$Temp)
temp.diff <- temp.max - temp.min
if (temp.diff < 3) {} else {stop("Stop, check for temperature effects")}
} else {}
if (temp == T){
temp.test <- lm(round(Temp, 2) ~ Time, data = data.in)
p <- round(anova(temp.test)$'Pr(>F)'[1], 3)
temp.min <- min(data.in$Temp)
temp.max <- max(data.in$Temp)
temp.diff <- temp.max - temp.min
if (temp.diff < 3) {} else {stop("Stop, check for temperature effects")}
} else {}
results <- matrix(NA, nrow=length(samples), ncol=13)
rm(list=ls())
setwd("~/Github/MinimalCell/scripts/5.GrowthCurves/test")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
source("../bin/modified_Gomp_diagnostic.R")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) 100*( sd(x)/mean(x))
rmse <- function(x) sqrt(mean(x)^2) # residuals
nm.b1 <- read.csv("../data/batch_NM_1.csv")
# Change times to numeric
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
x(1,3,5,8,12)
x<-(1,3,5,8,12)
x<-c(1,3,5,8,12)
y<-c(4,7,14,20,30)
lm(y~x)
play <- lm(y~x)
summary(play)
summary(play)$coefficients["Pr(>|t|)"]
summary(play)$coefficients
summary(play)$coefficients[4]
summary(play)$coefficients[6]
summary(play)$coefficients[8]
summary(lm(y~x))$coefficients[8]
rm(list=ls())
getwd()
setwd("~/GitHub/BiofilmTrait")
require("png")
require("bbmle")
rmse <- function(x) sqrt(mean(x)^2) # residuals
setwd("~/GitHub/BiofilmTrait")
resp.raw <- read.csv("./data/Biofilm_Respiration.csv", header = TRUE, sep =",")
resp.trunc <- resp.raw[,1:3] # gets rid of trailing data
resp.uneg <- resp.raw[,1]*-1 # convert MPa to positive values
resp <- data.frame(resp.uneg,resp.trunc) # add uneg to dataframe
colnames(resp)[1] <- "Wp" # "Wp" = uneg MPa (positive)
A = 35 # Maximum respiratoin
X = 0 # Optimum MPa
B = 0.05 # Niche Breadth
T = 1 # Tau, shape kernel
Z = 7.5 # Error
fit4 <- mle2(R ~ dnorm(mean = a*exp(-((abs(W + x))/b)^t), sd = z),
method = "L-BFGS-B",lower = c(x = 0.0000, b = 0.001),
start = list(a = A, x = X, b = B,t = T, z = Z),
data = resp, parameters = c(x ~ Strain))
# opt water differs between strain
coef(fit4)
predict(fit4)
residuals(fit4)
dwtest(residuals(fit2) ~ 1)
dwtest(residuals(fit4) ~ 1)
dw <- dwtest(residuals(fit2) ~ 1)
dw <- dwtest(residuals(fit4) ~ 1)
dw
summary(dw)
dwtest(residuals(fit4) ~ 1)$p.value
dwtest(residuals(fit4) ~ 1)$p.value
summary(lm(residuals(fit4)~ (qnorm(ppoints(length(residuals(fit4))), mean(residuals(fit4)), sd(residuals(fit4))))))$coefficients[8]
x<-c(1,3,5,8,12)
y<-c(4,7,14,20,30)
play <- lm(y~x)
summary(play)
results$norm[i] <-summary(lm(residuals(fit4)~ (qnorm(ppoints(length(residuals(fit4))), mean(residuals(fit4)), sd(residuals(fit4))))))$r.squared
summary(lm(residuals(fit4)~ (qnorm(ppoints(length(residuals(fit4))), mean(residuals(fit4)), sd(residuals(fit4))))))$r.squared
(residuals(fit4) - mean(residuals(fit4))) / sd(residuals(fit4))
sum(abs(residuals(fit4) - mean(residuals(fit4))) / sd(residuals(fit4)))
z.score <- function(x) (x - mean(x)) / sd(x)
z.score <- residuals(fit4)
z.score
zscore(residuals(fit4))
z.score(residuals(fit4))
z.score <- function(x) (x - mean(x)) / sd(x)
z.score(residuals(fit4))
z<-z.score(residuals(fit4))
sum(abs(z)>3)
(residuals(fit4) - mean(residuals(fit4))) / sd(residuals(fit4)), sum(abs(z_scores)>3)
residuals(fit4) - mean(residuals(fit4))) / sd(residuals(fit4)
(residuals(fit4) - mean(residuals(fit4))) / sd(residuals(fit4)
)
(residuals(fit4) - mean(residuals(fit4))) / sd(residuals(fit4))
sum(abs((residuals(fit4) - mean(residuals(fit4))) / sd(residuals(fit4)))>3)
source("../bin/modified_Gomp_diagnostic.R")
source("../bin/modified_Gomp_diagnostic.R")
source("../bin/modified_Gomp_diagnostic2.R")
rm(list=ls())
setwd("~/Github/MinimalCell/scripts/5.GrowthCurves/test")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
require("bbmle")
source("../bin/modified_Gomp_diagnostic2.R")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) 100*( sd(x)/mean(x))
rmse <- function(x) sqrt(mean(x)^2) # residuals
nm.b1 <- read.csv("../data/batch_NM_1.csv")
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
# Pull out wells over time
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
rm(list=ls())
setwd("~/Github/MinimalCell/scripts/5.GrowthCurves/test")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
require("bbmle")
source("../bin/modified_Gomp_diagnostic2.R")
nm.b1 <- read.csv("../data/batch_NM_1.csv")
# Change times to numeric
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
# Pull out wells over time
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
??resid.mle2
resid.mle2 <- function(object, ...) {
# Extract the estimated parameters from the mle2 object
coef <- coef(object)
# Calculate the predicted values of the response variable
yhat <- predict(object, newdata = NULL, type = "response", ...)
# Calculate the residuals (observed minus predicted)
residuals <- object@data$y - yhat
return(residuals)
}
rm(list=ls())
getwd()
setwd("~/GitHub/BiofilmTrait")
```
resid.mle2 <- function(object, ...) {
# Extract the estimated parameters from the mle2 object
coef <- coef(object)
# Calculate the predicted values of the response variable
yhat <- predict(object, newdata = NULL, type = "response", ...)
# Calculate the residuals (observed minus predicted)
residuals <- object@data$y - yhat
return(residuals)
}
resid.mle2(fit4)
fit4
setwd("~/GitHub/BiofilmTrait")
resp.raw <- read.csv("./data/Biofilm_Respiration.csv", header = TRUE, sep =",")
resp.trunc <- resp.raw[,1:3] # gets rid of trailing data
resp.uneg <- resp.raw[,1]*-1 # convert MPa to positive values
resp <- data.frame(resp.uneg,resp.trunc) # add uneg to dataframe
colnames(resp)[1] <- "Wp" # "Wp" = uneg MPa (positive)
#starting values for niche model
A = 35 # Maximum respiratoin
X = 0 # Optimum MPa
B = 0.05 # Niche Breadth
T = 1 # Tau, shape kernel
Z = 7.5 # Error
fit4 <- mle2(R ~ dnorm(mean = a*exp(-((abs(W + x))/b)^t), sd = z),
method = "L-BFGS-B",lower = c(x = 0.0000, b = 0.001),
start = list(a = A, x = X, b = B,t = T, z = Z),
data = resp, parameters = c(x ~ Strain))
# opt water differs between strain
resid.mle2(fit4)
grid.mle2()
?grid.mle2()
rm(list=ls())
setwd("~/Github/MinimalCell/scripts/5.GrowthCurves/test")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
require("bbmle")
source("../bin/modified_Gomp_diagnostic2.R")
nm.b1 <- read.csv("../data/batch_NM_1.csv")
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
# Pull out wells over time
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
minuslogl
rm(list=ls())
getwd()
setwd("~/GitHub/BiofilmTrait")
require("png")
require("bbmle")
rmse <- function(x) sqrt(mean(x)^2) # residuals
setwd("~/GitHub/BiofilmTrait")
resp.raw <- read.csv("./data/Biofilm_Respiration.csv", header = TRUE, sep =",")
resp.trunc <- resp.raw[,1:3] # gets rid of trailing data
resp.uneg <- resp.raw[,1]*-1 # convert MPa to positive values
resp <- data.frame(resp.uneg,resp.trunc) # add uneg to dataframe
colnames(resp)[1] <- "Wp" # "Wp" = uneg MPa (positive)
A = 35 # Maximum respiratoin
X = 0 # Optimum MPa
B = 0.05 # Niche Breadth
T = 1 # Tau, shape kernel
Z = 7.5 # Error
fit4 <- mle2(R ~ dnorm(mean = a*exp(-((abs(W + x))/b)^t), sd = z),
method = "L-BFGS-B",lower = c(x = 0.0000, b = 0.001),
start = list(a = A, x = X, b = B,t = T, z = Z),
data = resp, parameters = c(x ~ Strain))
# opt water differs between strain
ci.FI<-function(model){
cfs<-coef(model)
cfs<-model@coef
ses<-sqrt(diag(vcov(model)))	# standard errors
lw<-cfs-1.96*ses
up<-cfs+1.96*ses
res<-cbind(lw,up)
dimnames(res)<-list(names(cfs),c("2.5 %","97.5 %"))
res
}
}
ci.FI<-function(model){
cfs<-coef(model)
cfs<-model@coef
ses<-sqrt(diag(vcov(model)))	# standard errors
lw<-cfs-1.96*ses
up<-cfs+1.96*ses
res<-cbind(lw,up)
dimnames(res)<-list(names(cfs),c("2.5 %","97.5 %"))
res
}
ciFI(fit4)
ci.FI<-function(model){
cfs<-coef(model)
cfs<-model@coef
ses<-sqrt(diag(vcov(model)))	# standard errors
lw<-cfs-1.96*ses
up<-cfs+1.96*ses
res<-cbind(lw,up)
dimnames(res)<-list(names(cfs),c("2.5 %","97.5 %"))
res
}
ci.FI(fit4)
fit4@coef
coef(fit4)
source("../bin/modified_Gomp_diagnostic2.R")
rm(list=ls())
setwd("~/Github/MinimalCell/scripts/5.GrowthCurves/test")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
require("bbmle")
source("../bin/modified_Gomp_diagnostic2.R")
nm.b1 <- read.csv("../data/batch_NM_1.csv")
# Change times to numeric
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
resids <-resid(fit1$res.mod[[1]])
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
rm(list=ls())
getwd()
setwd("~/GitHub/BiofilmTrait")
require("png")
require("bbmle")
rmse <- function(x) sqrt(mean(x)^2) # residuals
setwd("~/GitHub/BiofilmTrait")
resp.raw <- read.csv("./data/Biofilm_Respiration.csv", header = TRUE, sep =",")
resp.trunc <- resp.raw[,1:3] # gets rid of trailing data
resp.uneg <- resp.raw[,1]*-1 # convert MPa to positive values
resp <- data.frame(resp.uneg,resp.trunc) # add uneg to dataframe
colnames(resp)[1] <- "Wp" # "Wp" = uneg MPa (positive)
#starting values for niche model
A = 35 # Maximum respiratoin
X = 0 # Optimum MPa
B = 0.05 # Niche Breadth
T = 1 # Tau, shape kernel
Z = 7.5 # Error
fit4 <- mle2(R ~ dnorm(mean = a*exp(-((abs(W + x))/b)^t), sd = z),
method = "L-BFGS-B",lower = c(x = 0.0000, b = 0.001),
start = list(a = A, x = X, b = B,t = T, z = Z),
data = resp, parameters = c(x ~ Strain))
# opt water differs between strain
slotNames(fit4)
fit4@fullcoef
fit4@details
fit4@data
residuals(fit4)
fit4$residuals
fit4@residuals
source("../bin/modified_Gomp_diagnostic2.R")
rm(list=ls())
setwd("~/Github/MinimalCell/scripts/5.GrowthCurves/test")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
require("bbmle")
source("../bin/modified_Gomp_diagnostic2.R")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) 100*( sd(x)/mean(x))
rmse <- function(x) sqrt(mean(x)^2) # residuals
nm.b1 <- read.csv("../data/batch_NM_1.csv")
# Change times to numeric
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
# Pull out wells over time
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
rm(list=ls())
setwd("~/Github/MinimalCell/scripts/5.GrowthCurves/test")
rm(list=ls())
rm(list=ls())
setwd("~/Github/MinimalCell/scripts/5.GrowthCurves/test")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
require("bbmle")
source("../bin/modified_Gomp_diagnostic2.R")
nm.b1 <- read.csv("../data/batch_NM_1.csv")
# Change times to numeric
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
# Pull out wells over time
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
str(best.f1)
slotNames(best.f1)
slotNames(fit1$res.mod[[best]])
res.mat
pos
best
best.f1@details
best.f1@details[1]
rm(list=ls())
setwd("~/Github/MinimalCell/done/test")
setwd("~/Github/MinimalCell/don/test")
require("dplyr")
require("nlme")
require("bbmle")
source("../bin/modified_Gomp_diagnostic.R")
require("dplyr")
require("nlme")
require("bbmle")
source("../bin/modified_Gomp_diagnostic.R")
source("../bin/modified_Gomp_diagnostic2.R")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) 100*( sd(x)/mean(x))
cv <- function(x) 100*( sd(x)/mean(x))
"
nm.b1 <- read.csv("../data/batch_NM_1.csv")
nm.b1 <- read.csv("../data/batch_NM_1.csv")
# Change times to numeric
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
nm.b1 <- read.csv("../data/batch_NM_1.csv")
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
# Pull out technical replicates (n =3) for each evolutionary time point
# Column 1 = time in hours
# Example, "nm.10" = non-minimal cell replicate population 1 after 10 generations of evolution
# Not included here, but there are 17 evolution time points on each of eight plates.
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
# Run Gompertz (only need to run once then comment out)
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
source("../bin/modified_Gomp_diagnostic2.R")
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
nm.t10.1 <- growth.modGomp(input = nm.10, output.name = "nm.t10.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
t0.out.nm.1 <- read.table("../output/nm.t0.1.parms.txt", sep = ",", header=TRUE)
t0.out.nm.1
treats.nm.1 <- read.csv("../data/treatments_batch1_NM.csv")
treat.nm.1
treats.nm.1
