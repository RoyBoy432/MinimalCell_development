# Add non-minimal evolved: resmapled points
points(jitter(rep(3,length(nmin.ftsZ.rand)), amount = 0.25), nmin.ftsZ.rand,
pch = 21, bg = "lightblue", col = "lightblue", lwd = 2, cex = 0.75)
# Add minimal evolved: resmapled points
points(jitter(rep(3,length(min.ftsZ.rand)), amount = 0.25), min.ftsZ.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
plot.new()
par(mar = c(7, 7, 5, 7))
# Add non-minimal ancestor: resampled raw points
plot(jitter(rep(1,length(nmin.anc.rand)), amount = 0.5), nmin.anc.rand, xlim = c(0.25, 3.75),
ylim = c(-0.05, 0.5), type = "p", pch = 21, bg = "lightblue",
col = "lightblue", cex = 0.75, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd = 2)
# Add minimal ancestor: resmapled points
points(jitter(rep(1,length(min.anc.rand)), amount = 0.5), min.anc.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add non-minimal evolved: resmapled points
points(jitter(rep(3,length(nmin.ftsZ.rand)), amount = 0.25), nmin.ftsZ.rand,
pch = 21, bg = "lightblue", col = "lightblue", lwd = 2, cex = 0.75)
# Add minimal evolved: resmapled points
points(jitter(rep(3,length(min.ftsZ.rand)), amount = 0.25), min.ftsZ.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
plot.new()
par(mar = c(7, 7, 5, 7))
# Add non-minimal ancestor: resampled raw points
plot(jitter(rep(1,length(nmin.anc.rand)), amount = 0.5), nmin.anc.rand, xlim = c(0.25, 3.75),
ylim = c(-0.05, 0.75), type = "p", pch = 21, bg = "lightblue",
col = "lightblue", cex = 0.75, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd = 2)
# Add minimal ancestor: resmapled points
points(jitter(rep(1,length(min.anc.rand)), amount = 0.5), min.anc.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add non-minimal evolved: resmapled points
points(jitter(rep(3,length(nmin.ftsZ.rand)), amount = 0.25), nmin.ftsZ.rand,
pch = 21, bg = "lightblue", col = "lightblue", lwd = 2, cex = 0.75)
# Add minimal evolved: resmapled points
points(jitter(rep(3,length(min.ftsZ.rand)), amount = 0.25), min.ftsZ.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
plot.new()
par(mar = c(7, 7, 5, 7))
# Add non-minimal ancestor: resampled raw points
plot(jitter(rep(1,length(nmin.anc.rand)), amount = 0.5), nmin.anc.rand, xlim = c(0.25, 3.75),
ylim = c(-0.05, 1), type = "p", pch = 21, bg = "lightblue",
col = "lightblue", cex = 0.75, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd = 2)
# Add minimal ancestor: resmapled points
points(jitter(rep(1,length(min.anc.rand)), amount = 0.5), min.anc.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add non-minimal evolved: resmapled points
points(jitter(rep(3,length(nmin.ftsZ.rand)), amount = 0.25), nmin.ftsZ.rand,
pch = 21, bg = "lightblue", col = "lightblue", lwd = 2, cex = 0.75)
# Add minimal evolved: resmapled points
points(jitter(rep(3,length(min.ftsZ.rand)), amount = 0.25), min.ftsZ.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
size
arrows(x0 = c(1,3), y0 = size$mean[4:6],
y1 = c(1,3) + size$sem[4:6],
angle = 90, length = 0.1, lwd = 2, col = "blue")
size$mean[4:6]
size$mean[4]
size$mean[4,6]
size$mean[c(4,6)]
arrows(x0 = c(1,3), y0 = size$mean[c(4,6)],
y1 = c(1,3) + size$mean[c(4,6)],
angle = 90, length = 0.1, lwd = 2, col = "blue")
size
plot.new()
par(mar = c(7, 7, 5, 7))
# Add non-minimal ancestor: resampled raw points
plot(jitter(rep(1,length(nmin.anc.rand)), amount = 0.5), nmin.anc.rand, xlim = c(0.25, 3.75),
ylim = c(-0.05, 1), type = "p", pch = 21, bg = "lightblue",
col = "lightblue", cex = 0.75, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd = 2)
# Add minimal ancestor: resmapled points
points(jitter(rep(1,length(min.anc.rand)), amount = 0.5), min.anc.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add non-minimal evolved: resmapled points
points(jitter(rep(3,length(nmin.ftsZ.rand)), amount = 0.25), nmin.ftsZ.rand,
pch = 21, bg = "lightblue", col = "lightblue", lwd = 2, cex = 0.75)
# Add minimal evolved: resmapled points
points(jitter(rep(3,length(min.ftsZ.rand)), amount = 0.25), min.ftsZ.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
arrows(x0 = c(1,3), y0 = size$mean[c(4,6)],
y1 = c(1,3) + size$sem[c(4,6)],
angle = 90, length = 0.1, lwd = 2, col = "blue")
size
size$sem[c(4,6)]
plot.new()
par(mar = c(7, 7, 5, 7))
# Add non-minimal ancestor: resampled raw points
plot(jitter(rep(1,length(nmin.anc.rand)), amount = 0.5), nmin.anc.rand, xlim = c(0.25, 3.75),
ylim = c(-0.05, 1), type = "p", pch = 21, bg = "lightblue",
col = "lightblue", cex = 0.75, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd = 2)
# Add minimal ancestor: resmapled points
points(jitter(rep(1,length(min.anc.rand)), amount = 0.5), min.anc.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add non-minimal evolved: resmapled points
points(jitter(rep(3,length(nmin.ftsZ.rand)), amount = 0.25), nmin.ftsZ.rand,
pch = 21, bg = "lightblue", col = "lightblue", lwd = 2, cex = 0.75)
# Add minimal evolved: resmapled points
points(jitter(rep(3,length(min.ftsZ.rand)), amount = 0.25), min.ftsZ.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add error bars
# Non-minimal
arrows(x0 = c(1,3), y0 = size$mean[c(4,6)],
y1 = size$mean[c(4,6)] + size$sem[c(4,6)],
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = c(1,3), y0 = size$mean[c(4,6)],
y1 = size$mean[c(4,6)] + size$sem[c(4,6)],
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = c(1,3), y0 = size$mean[c(4,6)],
y1 = size$mean[c(4,6)] - size$sem[c(4,6)],
angle = 90, length = 0.1, lwd = 2, col = "blue")
size
arrows(x0 = c(1,3), y0 = size$mean[c(1,3)],
y1 = size$mean[c(1,3)] + size$sem[c(1,3)],
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = c(1,3), y0 = size$mean[c(1,3)],
y1 = size$mean[c(1,3)] - size$sem[c(1,3)],
angle = 90, length = 0.1, lwd = 2, col = "red")
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.0", "0.5", "1.0", "1.5"), at = c(0, 0.5, 1))
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.0", "0.5", "1.0"), at = c(0, 0.5, 1))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0, 0.5, 1), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("Ancestor", "ftsZ E315*"),
col.axis = "darkgray", at = c(1, 3))
mtext(expression('Strain'), side = 1,
outer = TRUE, cex = 1.5, line = -3.5, adj = 0.5)
mtext(expression(paste("Cell diameter (",mu, "m)")), side = 2,
outer = TRUE, cex = 1.5, line = -3, adj = 0.55)
# Add line segments
segments(1, size$mean[4], 3, size$mean[6], col = "blue", lwd = 2)
segments(1, size$mean[1], 3, size$mean[3], col = "red", lwd = 2)
# Add means
points(c(1,3), size$mean[4:6], pch = 22, bg = "blue", col = "blue", lwd = 2, cex = 2)
size$mean[4:6]
# Add means
points(c(1,3), size$mean[c(4,6)], pch = 22, bg = "blue", col = "blue", lwd = 2, cex = 2)
points(c(1,3), size$mean[c(1,3)], pch = 22, bg = "red", col = "red", lwd = 2, cex = 2)
# Add strain identifier
text(3.9, size$mean[6], labels = "Non-minimal", cex = 1.0)
text(3.9, size$mean[3], labels = "Minimal", cex = 1.0)
png(filename="~/GitHub/MinimalCell/figures/FigExt4",
width = 1200, height = 1200, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
# Add non-minimal ancestor: resampled raw points
plot(jitter(rep(1,length(nmin.anc.rand)), amount = 0.5), nmin.anc.rand, xlim = c(0.25, 4.55),
ylim = c(-0.05, 1), type = "p", pch = 21, bg = "lightblue",
col = "lightblue", cex = 0.75, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd = 2)
# Add minimal ancestor: resmapled points
points(jitter(rep(1,length(min.anc.rand)), amount = 0.5), min.anc.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add non-minimal evolved: resmapled points
points(jitter(rep(3,length(nmin.ftsZ.rand)), amount = 0.25), nmin.ftsZ.rand,
pch = 21, bg = "lightblue", col = "lightblue", lwd = 2, cex = 0.75)
# Add minimal evolved: resmapled points
points(jitter(rep(3,length(min.ftsZ.rand)), amount = 0.25), min.ftsZ.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add error bars
# Non-minimal
arrows(x0 = c(1,3), y0 = size$mean[c(4,6)],
y1 = size$mean[c(4,6)] + size$sem[c(4,6)],
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = c(1,3), y0 = size$mean[c(4,6)],
y1 = size$mean[c(4,6)] - size$sem[c(4,6)],
angle = 90, length = 0.1, lwd = 2, col = "blue")
# Minimal
arrows(x0 = c(1,3), y0 = size$mean[c(1,3)],
y1 = size$mean[c(1,3)] + size$sem[c(1,3)],
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = c(1,3), y0 = size$mean[c(1,3)],
y1 = size$mean[c(1,3)] - size$sem[c(1,3)],
angle = 90, length = 0.1, lwd = 2, col = "red")
# Add axes and labels
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.0", "0.5", "1.0"), at = c(0, 0.5, 1))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0, 0.5, 1), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("Ancestor", "ftsZ E315*"),
col.axis = "darkgray", at = c(1, 3))
mtext(expression('Strain'), side = 1,
outer = TRUE, cex = 1.5, line = -3.5, adj = 0.5)
mtext(expression(paste("Cell diameter (",mu, "m)")), side = 2,
outer = TRUE, cex = 1.5, line = -3, adj = 0.55)
# Add line segments
segments(1, size$mean[4], 3, size$mean[6], col = "blue", lwd = 2)
segments(1, size$mean[1], 3, size$mean[3], col = "red", lwd = 2)
# Add means
points(c(1,3), size$mean[c(4,6)], pch = 22, bg = "blue", col = "blue", lwd = 2, cex = 2)
points(c(1,3), size$mean[c(1,3)], pch = 22, bg = "red", col = "red", lwd = 2, cex = 2)
# Add strain identifier
text(3.9, size$mean[6], labels = "Non-minimal", cex = 1.0)
text(3.9, size$mean[3], labels = "Minimal", cex = 1.0)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/MinimalCell/figures/FigExt4.png")
grid.raster(img)
png(filename="~/GitHub/MinimalCell/figures/FigExt4.png",
width = 1200, height = 1200, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
# Add non-minimal ancestor: resampled raw points
plot(jitter(rep(1,length(nmin.anc.rand)), amount = 0.5), nmin.anc.rand, xlim = c(0.25, 4.55),
ylim = c(-0.05, 1), type = "p", pch = 21, bg = "lightblue",
col = "lightblue", cex = 0.75, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd = 2)
# Add minimal ancestor: resmapled points
points(jitter(rep(1,length(min.anc.rand)), amount = 0.5), min.anc.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add non-minimal evolved: resmapled points
points(jitter(rep(3,length(nmin.ftsZ.rand)), amount = 0.25), nmin.ftsZ.rand,
pch = 21, bg = "lightblue", col = "lightblue", lwd = 2, cex = 0.75)
# Add minimal evolved: resmapled points
points(jitter(rep(3,length(min.ftsZ.rand)), amount = 0.25), min.ftsZ.rand,
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add error bars
# Non-minimal
arrows(x0 = c(1,3), y0 = size$mean[c(4,6)],
y1 = size$mean[c(4,6)] + size$sem[c(4,6)],
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = c(1,3), y0 = size$mean[c(4,6)],
y1 = size$mean[c(4,6)] - size$sem[c(4,6)],
angle = 90, length = 0.1, lwd = 2, col = "blue")
# Minimal
arrows(x0 = c(1,3), y0 = size$mean[c(1,3)],
y1 = size$mean[c(1,3)] + size$sem[c(1,3)],
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = c(1,3), y0 = size$mean[c(1,3)],
y1 = size$mean[c(1,3)] - size$sem[c(1,3)],
angle = 90, length = 0.1, lwd = 2, col = "red")
# Add axes and labels
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.0", "0.5", "1.0"), at = c(0, 0.5, 1))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0, 0.5, 1), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("Ancestor", "ftsZ E315*"),
col.axis = "darkgray", at = c(1, 3))
mtext(expression('Strain'), side = 1,
outer = TRUE, cex = 1.5, line = -3.5, adj = 0.5)
mtext(expression(paste("Cell diameter (",mu, "m)")), side = 2,
outer = TRUE, cex = 1.5, line = -3, adj = 0.55)
# Add line segments
segments(1, size$mean[4], 3, size$mean[6], col = "blue", lwd = 2)
segments(1, size$mean[1], 3, size$mean[3], col = "red", lwd = 2)
# Add means
points(c(1,3), size$mean[c(4,6)], pch = 22, bg = "blue", col = "blue", lwd = 2, cex = 2)
points(c(1,3), size$mean[c(1,3)], pch = 22, bg = "red", col = "red", lwd = 2, cex = 2)
# Add strain identifier
text(3.9, size$mean[6], labels = "Non-minimal", cex = 1.0)
text(3.9, size$mean[3], labels = "Minimal", cex = 1.0)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/MinimalCell/figures/FigExt4.png")
grid.raster(img)
rel.fit.raw <-read.csv("~/GitHub/MinimalCell/datafiles/ftsZ_W_cases.csv")
rel.fit.raw <- as_tibble(rel.fit.raw)
# Subset data
rel.fit <- rel.fit.raw %>% group_by(strain, Mutation) %>% summarise(mean = mean(W_1.0), sem = sem(W_1.0))
# Set data as factors and rename levels
rel.fit$strain <- as.factor(rel.fit$strain)
levels(rel.fit$strain)[levels(rel.fit$strain)=="JCVI-syn1.0"] <- "Non-minimal"
levels(rel.fit$strain)[levels(rel.fit$strain)=="JCVI-syn3B"] <- "Minimal"
rel.fit$strain <- factor(rel.fit$strain, levels=c("Non-minimal","Minimal"))
# Add x-values for plotting
time.x <- c(3,1,3,1)
rel.fit <- data.frame(rel.fit, time.x)
# Subset relative fitness by strain
rel.fit.wt  <- filter(rel.fit, strain == "Non-minimal") %>%
dplyr::select(Mutation, mean, sem, time.x)
rel.fit.min  <- filter(rel.fit, strain== "Minimal") %>%
dplyr::select(Mutation, mean, sem, time.x)
png(filename="~/GitHub/MinimalCell/figures/FigExt3.png",
width = 1200, height = 1200, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
# initiate plot with points for syn3B ancestor (minimal)
plot(jitter(rep(1, length(filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="None")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="None")$W_1.0, ylim = c(0.25, 1.65), xlim = c(0, 4.55),
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 1.3, yaxt = "n",
xaxt = "n", cex.lab = 1.5, las = 1,  ylab = "", xlab = "")
box(lwd=2)
# add points for for syn 1.0 ancestor (non-minimal)
points(jitter(rep(1, length(filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="None")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="None")$W_1.0, pch = 21, bg = "lightblue", col = "lightblue",
lwd = 2, cex = 1.3)
# add points for for syn 3B ftsZ (minimal)
points(jitter(rep(3, length(filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="ftsZ")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="ftsZ")$W_1.0, pch = 21, bg = "pink", col = "pink",
lwd = 2, cex = 1.3)
# add points for for syn 3B ftsZ (non-minimal)
points(jitter(rep(3, length(filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="ftsZ")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="ftsZ")$W_1.0, pch = 21, bg = "lightblue", col = "lightblue",
lwd = 2, cex = 1.3)
# Add non-minimal means
points(rel.fit.min$time.x, rel.fit.wt$mean, pch = 21,
bg = "blue", col = "blue", lwd = 2, cex = 2)
# Add minimal means
points(rel.fit.min$time.x, rel.fit.min$mean, pch = 21,
bg = "red", col = "red", lwd = 2, cex = 2)
# Add error bars
arrows(x0 = rel.fit.wt$time.x, y0 = rel.fit.wt$mean,
y1 = rel.fit.wt$mean + rel.fit.wt$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = rel.fit.wt$time.x, y0 = rel.fit.wt$mean,
y1 = rel.fit.wt$mean - rel.fit.wt$sem,
angle = 90, length=0.1, lwd = 2, col = "blue")
arrows(x0 = rel.fit.min$time.x, y0 = rel.fit.min$mean,
y1 = rel.fit.min$mean + rel.fit.min$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = rel.fit.min$time.x, y0 = rel.fit.min$mean,
y1 = rel.fit.min$mean - rel.fit.min$sem,
angle = 90, length=0.1, lwd = 2, col = "red")
# Add axes and labels
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.5", "1.0", "1.5"), at = c(0.5, 1, 1.5))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0.5, 1, 1.5), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("Ancestor", "ftsZ E315*"),
col.axis = "darkgray", at = c(1, 3))
mtext(expression('Strain'), side = 1,
outer = TRUE, cex = 1.5, line = -3.5, adj = 0.45)
mtext(expression("Relative fitness ("~italic("W")~")"), side = 2,
outer = TRUE, cex = 1.5, line = -4, adj = 0.55)
# Add line segments
segments(rel.fit.wt$time.x[1], rel.fit.wt$mean[1], rel.fit.wt$time.x[2],
rel.fit.wt$mean[2], col = "blue", lwd = 2)
segments(rel.fit.min$time.x[1], rel.fit.min$mean[1], rel.fit.min$time.x[2],
rel.fit.min$mean[2], col = "red", lwd = 2)
# Add P-values
#mtext(expression("Timepoint:" ~italic("P")~"= 0.0003"), line = -2.5, cex = 0.80, at = 0.9)
#mtext(expression("Strain:" ~italic("P")~"< 0.0001"), line = -4.0, cex = 0.80, at = 0.75)
# Add strain identifier
text(3.9, rel.fit.wt$mean[1], labels = "Non-minimal", cex = 1.0)
text(3.8, rel.fit.min$mean[1], labels = "Minimal", cex = 1.0)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/MinimalCell/figures/FigExt3.png")
grid.raster(img)
png(filename="~/GitHub/MinimalCell/figures/FigExt3.png",
width = 1200, height = 1200, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
# initiate plot with points for syn3B ancestor (minimal)
plot(jitter(rep(1, length(filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="None")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="None")$W_1.0, ylim = c(0.1, 1.65), xlim = c(0, 4.55),
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 1.3, yaxt = "n",
xaxt = "n", cex.lab = 1.5, las = 1,  ylab = "", xlab = "")
box(lwd=2)
# add points for for syn 1.0 ancestor (non-minimal)
points(jitter(rep(1, length(filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="None")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="None")$W_1.0, pch = 21, bg = "lightblue", col = "lightblue",
lwd = 2, cex = 1.3)
# add points for for syn 3B ftsZ (minimal)
points(jitter(rep(3, length(filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="ftsZ")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="ftsZ")$W_1.0, pch = 21, bg = "pink", col = "pink",
lwd = 2, cex = 1.3)
# add points for for syn 3B ftsZ (non-minimal)
points(jitter(rep(3, length(filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="ftsZ")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="ftsZ")$W_1.0, pch = 21, bg = "lightblue", col = "lightblue",
lwd = 2, cex = 1.3)
# Add non-minimal means
points(rel.fit.min$time.x, rel.fit.wt$mean, pch = 21,
bg = "blue", col = "blue", lwd = 2, cex = 2)
# Add minimal means
points(rel.fit.min$time.x, rel.fit.min$mean, pch = 21,
bg = "red", col = "red", lwd = 2, cex = 2)
# Add error bars
arrows(x0 = rel.fit.wt$time.x, y0 = rel.fit.wt$mean,
y1 = rel.fit.wt$mean + rel.fit.wt$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = rel.fit.wt$time.x, y0 = rel.fit.wt$mean,
y1 = rel.fit.wt$mean - rel.fit.wt$sem,
angle = 90, length=0.1, lwd = 2, col = "blue")
arrows(x0 = rel.fit.min$time.x, y0 = rel.fit.min$mean,
y1 = rel.fit.min$mean + rel.fit.min$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = rel.fit.min$time.x, y0 = rel.fit.min$mean,
y1 = rel.fit.min$mean - rel.fit.min$sem,
angle = 90, length=0.1, lwd = 2, col = "red")
# Add axes and labels
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.5", "1.0", "1.5"), at = c(0.5, 1, 1.5))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0.5, 1, 1.5), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("Ancestor", "ftsZ E315*"),
col.axis = "darkgray", at = c(1, 3))
mtext(expression('Strain'), side = 1,
outer = TRUE, cex = 1.5, line = -3.5, adj = 0.45)
mtext(expression("Relative fitness ("~italic("W")~")"), side = 2,
outer = TRUE, cex = 1.5, line = -4, adj = 0.55)
# Add line segments
segments(rel.fit.wt$time.x[1], rel.fit.wt$mean[1], rel.fit.wt$time.x[2],
rel.fit.wt$mean[2], col = "blue", lwd = 2)
segments(rel.fit.min$time.x[1], rel.fit.min$mean[1], rel.fit.min$time.x[2],
rel.fit.min$mean[2], col = "red", lwd = 2)
# Add P-values
#mtext(expression("Timepoint:" ~italic("P")~"= 0.0003"), line = -2.5, cex = 0.80, at = 0.9)
#mtext(expression("Strain:" ~italic("P")~"< 0.0001"), line = -4.0, cex = 0.80, at = 0.75)
# Add strain identifier
text(3.9, rel.fit.wt$mean[1], labels = "Non-minimal", cex = 1.0)
text(3.8, rel.fit.min$mean[1], labels = "Minimal", cex = 1.0)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/MinimalCell/figures/FigExt3.png")
grid.raster(img)
png(filename="~/GitHub/MinimalCell/figures/FigExt3.png",
width = 1200, height = 1200, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
# initiate plot with points for syn3B ancestor (minimal)
plot(jitter(rep(1, length(filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="None")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="None")$W_1.0, ylim = c(0.1, 1.75), xlim = c(0, 4.55),
pch = 21, bg = "pink", col = "pink", lwd = 2, cex = 1.3, yaxt = "n",
xaxt = "n", cex.lab = 1.5, las = 1,  ylab = "", xlab = "")
box(lwd=2)
# add points for for syn 1.0 ancestor (non-minimal)
points(jitter(rep(1, length(filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="None")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="None")$W_1.0, pch = 21, bg = "lightblue", col = "lightblue",
lwd = 2, cex = 1.3)
# add points for for syn 3B ftsZ (minimal)
points(jitter(rep(3, length(filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="ftsZ")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn3B" & Mutation=="ftsZ")$W_1.0, pch = 21, bg = "pink", col = "pink",
lwd = 2, cex = 1.3)
# add points for for syn 3B ftsZ (non-minimal)
points(jitter(rep(3, length(filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="ftsZ")$W_1.0)), amount = 0.5),
filter(rel.fit.raw,strain=="JCVI-syn1.0" & Mutation=="ftsZ")$W_1.0, pch = 21, bg = "lightblue", col = "lightblue",
lwd = 2, cex = 1.3)
# Add non-minimal means
points(rel.fit.min$time.x, rel.fit.wt$mean, pch = 21,
bg = "blue", col = "blue", lwd = 2, cex = 2)
# Add minimal means
points(rel.fit.min$time.x, rel.fit.min$mean, pch = 21,
bg = "red", col = "red", lwd = 2, cex = 2)
# Add error bars
arrows(x0 = rel.fit.wt$time.x, y0 = rel.fit.wt$mean,
y1 = rel.fit.wt$mean + rel.fit.wt$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = rel.fit.wt$time.x, y0 = rel.fit.wt$mean,
y1 = rel.fit.wt$mean - rel.fit.wt$sem,
angle = 90, length=0.1, lwd = 2, col = "blue")
arrows(x0 = rel.fit.min$time.x, y0 = rel.fit.min$mean,
y1 = rel.fit.min$mean + rel.fit.min$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = rel.fit.min$time.x, y0 = rel.fit.min$mean,
y1 = rel.fit.min$mean - rel.fit.min$sem,
angle = 90, length=0.1, lwd = 2, col = "red")
# Add axes and labels
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.5", "1.0", "1.5"), at = c(0.5, 1, 1.5))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0.5, 1, 1.5), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("Ancestor", "ftsZ E315*"),
col.axis = "darkgray", at = c(1, 3))
mtext(expression('Strain'), side = 1,
outer = TRUE, cex = 1.5, line = -3.5, adj = 0.45)
mtext(expression("Relative fitness ("~italic("W")~")"), side = 2,
outer = TRUE, cex = 1.5, line = -4, adj = 0.55)
# Add line segments
segments(rel.fit.wt$time.x[1], rel.fit.wt$mean[1], rel.fit.wt$time.x[2],
rel.fit.wt$mean[2], col = "blue", lwd = 2)
segments(rel.fit.min$time.x[1], rel.fit.min$mean[1], rel.fit.min$time.x[2],
rel.fit.min$mean[2], col = "red", lwd = 2)
# Add P-values
#mtext(expression("Timepoint:" ~italic("P")~"= 0.0003"), line = -2.5, cex = 0.80, at = 0.9)
#mtext(expression("Strain:" ~italic("P")~"< 0.0001"), line = -4.0, cex = 0.80, at = 0.75)
# Add strain identifier
text(3.9, rel.fit.wt$mean[1], labels = "Non-minimal", cex = 1.0)
text(3.8, rel.fit.min$mean[1], labels = "Minimal", cex = 1.0)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/MinimalCell/figures/FigExt3.png")
grid.raster(img)
